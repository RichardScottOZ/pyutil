# Build an image that can do training and inference in SageMaker
# This is a Python 3 image that uses the nginx, gunicorn, flask stack
# for serving inferences in a stable way.

######
# [FYI_ONLY] As of this writing, SageMaker jobs cannot use containers based on DL containers.
#
# Reasons:
# - CPU DL container actually works on SageMaker, but
# - GPU DL container does not work on SageMaker, because the GPU DL container gpu needs cuda-10 which is
#   newer than what the SM's host EC2 supports.
#
# For more details, see: https://docs.aws.amazon.com/dlami/latest/devguide/deep-learning-containers-images.html
#FROM 763104351884.dkr.ecr.ap-southeast-1.amazonaws.com/tensorflow-training:1.13-cpu-py36-ubuntu16.04
#FROM 763104351884.dkr.ecr.ap-southeast-1.amazonaws.com/tensorflow-training:1.13-horovod-gpu-py36-cu100-ubuntu16.04
####

# Base container
FROM 520713654638.dkr.ecr.ap-southeast-1.amazonaws.com/sagemaker-tensorflow-scriptmode:1.12-cpu-py3

# NOTE: graphviz is for pydot
RUN apt-get -y update && apt-get install -y --no-install-recommends \
         wget \
         nginx \
         ca-certificates \
         tree \
         graphviz \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install --upgrade pip

# Here we get all python packages.
RUN pip3 install cloudpickle bokeh pydot \
        flask gevent gunicorn 

# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard
# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE
# keeps Python from writing the .pyc files which are unnecessary in this case. We also update
# PATH so that the train and serve programs are found when the container is invoked.

ENV PYTHONUNBUFFERED=TRUE
ENV PYTHONDONTWRITEBYTECODE=TRUE
ENV PATH="/opt/program:${PATH}"

# Set up the program in the image
COPY wide_and_deep /opt/program
WORKDIR /opt/program

